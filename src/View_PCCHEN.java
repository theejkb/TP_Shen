
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import pc.PC_Chen;
import pc.Pokemon;
import pc.Dresseur;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author csnd2356
 */
public class View_PCCHEN extends javax.swing.JFrame {

    /**
     * Creates new form View_PCCHEN
     */
    public View_PCCHEN() {
        initComponents();
        //Pour ne rien afficher si personne n'est connecté
        // Sauf le ruban du haut
        lvlPokSelect.setVisible(false);
        nomPokSelect.setVisible(false);
        AnnoncePokSelect.setVisible(false);
        listePokemon.setVisible(false);
        annoncePokDetenu.setVisible(false);
        emplacementPokSelect.setVisible(false);
        messageInfoConnexion.setVisible(false);
        annoncePokBoite.setVisible(false);
        listPokemonBoite.setVisible(false);
        transfereBoite.setVisible(false);
        msgErreurTransfer.setVisible(false);
        numBoite.setVisible(false);
        texteBoite.setVisible(false);
        transferePoche.setVisible(false);
    }

    PC_Chen chen = new PC_Chen();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nomDresseur = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        messageInfoConnexion = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        annoncePokDetenu = new javax.swing.JLabel();
        listePokemon = new javax.swing.JScrollPane();
        listePok = new javax.swing.JList<>();
        AnnoncePokSelect = new javax.swing.JLabel();
        nomPokSelect = new javax.swing.JLabel();
        lvlPokSelect = new javax.swing.JLabel();
        emplacementPokSelect = new javax.swing.JLabel();
        listPokemonBoite = new javax.swing.JScrollPane();
        listPokBoite = new javax.swing.JList<>();
        annoncePokBoite = new javax.swing.JLabel();
        transfereBoite = new javax.swing.JButton();
        msgErreurTransfer = new javax.swing.JLabel();
        transferePoche = new javax.swing.JButton();
        numBoite = new javax.swing.JComboBox<>();
        texteBoite = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Lucida Console", 0, 12)); // NOI18N
        jLabel1.setText("Dresseur, quel est ton nom? ");

        nomDresseur.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        nomDresseur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomDresseurActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        jButton1.setText("Valider");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        messageInfoConnexion.setFont(new java.awt.Font("Lucida Console", 0, 12)); // NOI18N
        messageInfoConnexion.setText("Connecté en tant que ");

        annoncePokDetenu.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        annoncePokDetenu.setText("Pokémon dans ta poche :");

        listePok.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        listePok.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listePok.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listePokMouseClicked(evt);
            }
        });
        listePokemon.setViewportView(listePok);

        AnnoncePokSelect.setFont(new java.awt.Font("Lucida Console", 1, 24)); // NOI18N
        AnnoncePokSelect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AnnoncePokSelect.setText("Pokémon Séléctionné");
        AnnoncePokSelect.setToolTipText("");

        nomPokSelect.setFont(new java.awt.Font("Ink Free", 1, 24)); // NOI18N
        nomPokSelect.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nomPokSelect.setText("jLabel3");

        lvlPokSelect.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        lvlPokSelect.setText("jLabel3");

        emplacementPokSelect.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        emplacementPokSelect.setText("jLabel2");

        listPokBoite.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        listPokBoite.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        listPokBoite.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listPokBoiteMouseClicked(evt);
            }
        });
        listPokemonBoite.setViewportView(listPokBoite);

        annoncePokBoite.setFont(new java.awt.Font("Lucida Console", 1, 14)); // NOI18N
        annoncePokBoite.setText("Pokémon sur le PC :");

        transfereBoite.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        transfereBoite.setText("Transférer vers la boite");
        transfereBoite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transfereBoiteActionPerformed(evt);
            }
        });

        msgErreurTransfer.setText("jLabel2");

        transferePoche.setFont(new java.awt.Font("Lucida Console", 1, 12)); // NOI18N
        transferePoche.setText("Transférer vers la poche");
        transferePoche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferePocheActionPerformed(evt);
            }
        });

        numBoite.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        numBoite.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        numBoite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                numBoiteActionPerformed(evt);
            }
        });
        numBoite.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                numBoitePropertyChange(evt);
            }
        });

        texteBoite.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        texteBoite.setText("Boite numéro");

        jMenu1.setText("PC DE CHEN");
        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(nomDresseur, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(messageInfoConnexion, javax.swing.GroupLayout.PREFERRED_SIZE, 464, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(transferePoche)
                        .addGap(18, 18, 18)
                        .addComponent(transfereBoite))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(annoncePokDetenu, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(AnnoncePokSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(listePokemon, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(127, 127, 127)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lvlPokSelect)
                                            .addComponent(emplacementPokSelect)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(msgErreurTransfer, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(nomPokSelect, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(texteBoite, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(numBoite, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(listPokemonBoite, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(annoncePokBoite)))))
                        .addGap(50, 50, 50))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1)
                    .addComponent(nomDresseur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(messageInfoConnexion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 10, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(AnnoncePokSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(annoncePokDetenu, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(texteBoite)
                            .addComponent(numBoite, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(annoncePokBoite)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(listePokemon, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(listPokemonBoite)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nomPokSelect, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lvlPokSelect)
                        .addGap(29, 29, 29)
                        .addComponent(emplacementPokSelect)
                        .addGap(33, 33, 33)
                        .addComponent(msgErreurTransfer)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transfereBoite, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transferePoche, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nomDresseurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomDresseurActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomDresseurActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String nom = nomDresseur.getText();
        int numboite = numBoite.getSelectedIndex() + 1;
        try {
            if (chen.connecteDresseur(nom)) {
                //On affiche tout quand le dresseur se connecte
                messageInfoConnexion.setVisible(true);
                messageInfoConnexion.setText("Connecté en tant que " + nom);
                annoncePokDetenu.setVisible(true);
                listePok.setVisible(true);
                listePokemon.setVisible(true);
                transfereBoite.setVisible(true);
                listPokBoite.setVisible(true);
                transferePoche.setVisible(true);
                listPokemonBoite.setVisible(true);
                texteBoite.setVisible(true);
                numBoite.setVisible(true);
                transfereBoite.setEnabled(false);
                transferePoche.setEnabled(false);
                annoncePokBoite.setVisible(true);
                //On affiche ses pokémons
                annoncePokDetenu.setText("Voici tes pokémons " + nom + " :");
                AffichePok();
                AffichePokBoite(numboite);
            } else {
                messageInfoConnexion.setVisible(true);
                messageInfoConnexion.setText("L'utilisateur n'existe pas");
            }
        } catch (SQLException ex) {
            Logger.getLogger(View_PCCHEN.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void listePokMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listePokMouseClicked
        //on récupère l'index du pok selectionné
        int index = listePok.getSelectedIndex();
        try {
            transfereBoite.setEnabled(true);
            transferePoche.setEnabled(false);
            lvlPokSelect.setVisible(true);
            nomPokSelect.setVisible(true);
            AnnoncePokSelect.setVisible(true);
            emplacementPokSelect.setVisible(true);
            // on crée un pokémon avec cet index pour afficher son nom et lvl
            Pokemon cePok = this.chen.getPokemonDetenu().get(index);
            nomPokSelect.setText(cePok.getNom_pok());
            lvlPokSelect.setText("Niveau " + cePok.getLevel());
            emplacementPokSelect.setText("Stockage : " + this.chen.getNumBoite(cePok));
        } catch (SQLException ex) {
            Logger.getLogger(View_PCCHEN.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_listePokMouseClicked

    private void transfereBoiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transfereBoiteActionPerformed
        int index = listePok.getSelectedIndex();
        //+1 car c'est l'indice qui est retourné
        int numboite = numBoite.getSelectedIndex() + 1;
        if (listePok.isSelectedIndex(index)) {
            try {
                Pokemon cePok = this.chen.getPokemonDetenu().get(index);
                this.chen.stockerPokemon(cePok, numboite);
                msgErreurTransfer.setVisible(true);
                msgErreurTransfer.setText("Le pokémon à bien été transféré !");
                AffichePokBoite(numboite);
                AffichePok();
            } catch (SQLException ex) {
                Logger.getLogger(View_PCCHEN.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            msgErreurTransfer.setVisible(true);
            msgErreurTransfer.setText("Veuillez selectionner un pokémon !");
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_transfereBoiteActionPerformed

    private void numBoiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_numBoiteActionPerformed
        int numboite = numBoite.getSelectedIndex() + 1;
        try {
            AffichePokBoite(numboite);
        } catch (SQLException ex) {
            Logger.getLogger(View_PCCHEN.class.getName()).log(Level.SEVERE, null, ex);
        } // TODO add your handling code here:// TODO add your handling code here:
    }//GEN-LAST:event_numBoiteActionPerformed

    private void transferePocheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferePocheActionPerformed
        int index = listPokBoite.getSelectedIndex();
        int numboite = numBoite.getSelectedIndex() + 1;
       
            if (listPokBoite.isSelectedIndex(index)) {
                if (Testpoche()){
                    try { // on récupère l'index du pokémon selectionner puis on l'enlève de cette boite
                    Pokemon cePok = this.chen.getPokemonBoite(numboite).get(index);
                    this.chen.retierPokemon(cePok, numboite);
                    msgErreurTransfer.setVisible(true);
                    msgErreurTransfer.setText("Le pokémon à bien été placé dans votre poche !");
                    AffichePokBoite(numboite);
                    AffichePok();                    
                } catch (SQLException ex) {
                    Logger.getLogger(View_PCCHEN.class.getName()).log(Level.SEVERE, null, ex);
                }
                } else {
                    msgErreurTransfer.setVisible(true);
                     msgErreurTransfer.setText("Vous avez déjà 6 pokémons !");
                }                
            } else {
                msgErreurTransfer.setVisible(true);
                msgErreurTransfer.setText("Veuillez selectionner un pokémon ");
            }       

        // TODO add your handling code here:
    }//GEN-LAST:event_transferePocheActionPerformed

    private void listPokBoiteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listPokBoiteMouseClicked
        int index = listPokBoite.getSelectedIndex();
        try {
            lvlPokSelect.setVisible(true);
            nomPokSelect.setVisible(true);
            transfereBoite.setEnabled(false);
            transferePoche.setEnabled(true);
            AnnoncePokSelect.setVisible(true);
            emplacementPokSelect.setVisible(true);
            Pokemon cePok = this.chen.getPokemonBoite(1).get(index);
            nomPokSelect.setText(cePok.getNom_pok());
            lvlPokSelect.setText("Niveau " + cePok.getLevel());
            if (this.chen.getNumBoite(cePok) == 0) {
                emplacementPokSelect.setText("Stockage : poche");
            } else {
                emplacementPokSelect.setText("Stockage :" + this.chen.getNumBoite(cePok));

            }

        } catch (SQLException ex) {
            Logger.getLogger(View_PCCHEN.class
                    .getName()).log(Level.SEVERE, null, ex);
        }     // TODO add your handling code here:
    }//GEN-LAST:event_listPokBoiteMouseClicked

    private void numBoitePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_numBoitePropertyChange

    }//GEN-LAST:event_numBoitePropertyChange

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(View_PCCHEN.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(View_PCCHEN.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(View_PCCHEN.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(View_PCCHEN.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new View_PCCHEN().setVisible(true);
            }
        });
    }

    public void AffichePok() throws SQLException {
        DefaultListModel<String> strList = new DefaultListModel<>();
        for (Pokemon p : this.chen.getPokemonDetenu()) {
            strList.addElement(p.getNom_pok() + " lvl(" + p.getLevel() + ")");
        }
        this.listePok.setModel(strList);
    }

    public void AffichePokBoite(int numboite) throws SQLException {
        DefaultListModel<String> strList2 = new DefaultListModel<>();
        for (Pokemon p : this.chen.getPokemonBoite(numboite)) {
            strList2.addElement(p.getNom_pok() + " lvl(" + p.getLevel() + ")");
        }
        this.listPokBoite.setModel(strList2);
    }

    public boolean Testpoche() {
        if (listePok.getLastVisibleIndex() == 5) {
            return false;
        } else {          
            return true;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AnnoncePokSelect;
    private javax.swing.JLabel annoncePokBoite;
    private javax.swing.JLabel annoncePokDetenu;
    private javax.swing.JLabel emplacementPokSelect;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JList<String> listPokBoite;
    private javax.swing.JScrollPane listPokemonBoite;
    private javax.swing.JList<String> listePok;
    private javax.swing.JScrollPane listePokemon;
    private javax.swing.JLabel lvlPokSelect;
    private javax.swing.JLabel messageInfoConnexion;
    private javax.swing.JLabel msgErreurTransfer;
    private javax.swing.JTextField nomDresseur;
    private javax.swing.JLabel nomPokSelect;
    private javax.swing.JComboBox<String> numBoite;
    private javax.swing.JLabel texteBoite;
    private javax.swing.JButton transfereBoite;
    private javax.swing.JButton transferePoche;
    // End of variables declaration//GEN-END:variables
}
